
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://ahmed15ayman7ahmed2002:poiuy123poiuy123@maher.bggyo.mongodb.net/maher?retryWrites=true&w=majority&appName=maher"
}

model Brand {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  name    String  @unique // e.g., "BMW"
  models  Model[] @relation("BrandModels") // One-to-many relationship with models
}

model Model {
  id                   String  @id @default(auto()) @map("_id") @db.ObjectId
  brandId              String  @db.ObjectId // Foreign key to Brand
  brand                Brand   @relation("BrandModels", fields: [brandId], references: [id])
  modelName            String  // e.g., "Z4"
  wheelbaseLengthMm    String     // Wheelbase length in mm
  frontWheelSizeInches String  // Front wheel size in inches
  rearWheelSizeInches  String  // Rear wheel size in inches
}

// schema.prisma
model User {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  email            String
  phone            String
  verificationCode String
  cars             Car[]  @relation("caar")
  addresses        Address[]  @relation("address")
  @@unique([email])
  @@unique([phone])
}
model Car {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  image         String  @default("https://example.com/default-image.jpg")
  brand         String
  model         String
  color         String
  fuelType      String
  discNumber    String
  licensePlate  String
  madeYear      String
  kilometers    String
  estmara       String?
  fixes         Fix[]
  userId        String  @db.ObjectId // Foreign key for the relationship
  user          User    @relation("caar",fields: [userId], references: [id]) // Define the relationship
}
model Fix {
  id            String   @id @map("_id") @default(auto()) @db.ObjectId
  name          String
  kilometers    String
  lastFixDate   DateTime
  fix           String  // New field added for the fix description
  rememberMe    DateTime
  morfaqat      String
  isRemember      Boolean @default(true) 
  createdAt     DateTime @default(now())
  carId         String   @db.ObjectId
  car           Car      @relation(fields: [carId], references: [id]) 
}

model Address {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  address   String
  type      String
  userId    String   @db.ObjectId
  user      User     @relation("address",fields: [userId], references: [id])
  createdAt DateTime @default(now())
}